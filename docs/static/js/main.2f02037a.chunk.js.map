{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.helper.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","console","log","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yMAIaA,EAAc,SAAC,GAEjB,IADPC,EACM,EADNA,cAGA,EAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAiBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,QCTlBK,EAAc,SAAC,GAIlB,EAHFC,GAGG,IAFHC,EAEE,EAFFA,MACAC,EACE,EADFA,IAEJ,OACI,mCACI,sBAAKC,UAAU,yCAAf,UACI,4BACMF,IAEN,4BACI,qBAAKG,IAAMF,EAAMG,IAAMJ,Y,uBCb9BK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACnBZ,QAAQC,IAAIU,GACNL,EAFa,iDAEoCO,UAAUF,GAF9C,UAEkE,KAFlE,YAEkF,oCAFlF,SAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCKPK,EAAU,SAAC,GAEb,IADHZ,EACE,EADFA,SAGJ,ECPwB,SAAEA,GAE1B,MAA4BvB,mBAAS,CACjC6B,KAAM,GACNO,SAAS,IAFb,mBAAQC,EAAR,KAAeC,EAAf,KAkBA,OAbAC,qBAAU,WAENjB,EAASC,GACJiB,MAAM,SAAAC,GAAI,OACPH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAAEb,IAGEc,EDb2BK,CAAcnB,GAAlCU,EAAd,EAAQJ,KAAcO,EAAtB,EAAsBA,QAEtB,OACI,qCACA,6BAAMb,IACJa,GAAW,2CACb,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAAgCA,GAAbA,EAAIhB,aEf9B2B,EAAe,WAExB,MAAoC3C,mBAAS,CAAE,gBAA/C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQS,EAAWuB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCblCqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2f02037a.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ \r\n    setCategories\r\n    }) => {\r\n\r\n    const [ inputValue, setInputValue ] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories( categories => [ inputValue, ...categories ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({\r\n        id,    \r\n        title,\r\n        url\r\n    }) => {\r\n    return (\r\n        <>\r\n            <div className=\"card animate__animated animate__fadeIn\">\r\n                <p>\r\n                    { title }\r\n                </p>\r\n                <p>\r\n                    <img src={ url } alt={ title } />\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n    console.log(category);    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=${'10'}&api_key=${'4Onggjy2SShUmuytSYWKpuuk29qLt3jI'}`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}\r\n","\r\nimport React from 'react';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ \r\n        category \r\n    }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>\r\n        { loading && <p>Loading...</p> }\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map( (img) => (\r\n                    <GifGridItem  key={img.id} { ...img } />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { getGifs } from '../helpers/getGifs.helper';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [ state, setState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            );\r\n\r\n    }, [ category ]);  \r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([ 'Dragon ball' ]);\r\n\r\n    // const addCategory = () => {\r\n    //     const newSerie = 'Braking bad';\r\n    //     setCategories( [ ...categories, newSerie ] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { \n  GifExpertApp \n} from './components/GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}